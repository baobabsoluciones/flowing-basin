from flowing_basin.core import Instance
from flowing_basin.solvers import PSOConfiguration, PSOFlowVariations
import numpy as np


instance = Instance.from_json("../data/input_example1.json")
paths_power_models = {
    "dam1": "../ml_models/model_E1.sav",
    "dam2": "../ml_models/model_E2.sav",
}
config = PSOConfiguration(
    num_particles=3,
    max_relvar=0.5,
    keep_direction=2,
    volume_shortage_penalty=3,
    volume_exceedance_bonus=0.1,
    volume_objectives=[59627.42324, 31010.43613642857],
)
pso = PSOFlowVariations(
    instance=instance,
    paths_power_models=paths_power_models,
    config=config,
)

# Test instance and river basin are correctly saved ---- #
# print(pso.instance.data)
# print(pso.solution.data)
# print(pso.river_basin.get_state())
# print(pso.num_particles)
# print(pso.num_dimensions)

# Test particle and relvars equivalence ---- #

# relvars -> swarm
decisionsVABC = np.array(
    [
        [
            [0.5, -0.25, 0.25],
            [0.5, -0.25, 0.5],
        ],
        [
            [-0.25, 0.5, 0.5],
            [-0.25, 0.5, 0.3],
        ],
        [
            [-0.25, 0.5, 0.5],
            [-0.25, 0.5, 0.3],
        ],
    ]
)
padding = np.array([[[0, 0, 0], [0, 0, 0]] for _ in range(instance.get_num_time_steps() - decisionsVABC.shape[0])])
decisionsNVABC_all_periods = np.concatenate([decisionsVABC, padding])
print("relvars:", decisionsNVABC_all_periods)
swarm = pso.input_to_swarm(decisionsNVABC_all_periods)
print("relvars -> swarm:", swarm)

# swarm -> relvars
print("swarm -> relvars:", pso.swarm_to_input(swarm))

for i in range(pso.num_particles):

    # relvar <-> particle
    print(f"particle {i}:", swarm[i].tolist())
    print(f"particle {i} -> relvars:", pso.particle_to_relvar(swarm[i]))

    # particle <-> flows
    print(f"particle {i} -> flows:", pso.particle_to_flows(swarm[i]))

# Test objective function ---- #
print(pso.objective_function(swarm))
print(pso.river_basin.get_state())

# Test particle ---- #
# particle = np.array(
#     [
#         2.83152188e-01,
#         3.00597624e-01,
#         2.96865389e-01,
#         -3.86339133e-01,
#         3.25356876e-01,
#         2.35903704e-01,
#         -7.26271085e-02,
#         4.36460305e-02,
#         2.35184319e-01,
#         2.27151449e-01,
#         1.68893448e-01,
#         4.14344074e-01,
#         1.60245833e-01,
#         -1.29196461e-01,
#         -8.99978483e-02,
#         2.12003457e-01,
#         2.35053228e-01,
#         3.86122030e-01,
#         2.71791275e-01,
#         -2.56875138e-01,
#         -2.34203432e-01,
#         -4.91852648e-01,
#         3.17265430e-01,
#         2.96960456e-01,
#         -2.87551433e-01,
#         9.79639267e-02,
#         2.86313667e-01,
#         -1.81686596e-01,
#         1.61970293e-01,
#         3.39956009e-01,
#         2.41030523e-01,
#         1.71811370e-01,
#         1.66812309e-01,
#         -6.57820669e-02,
#         -2.36298112e-01,
#         7.43115027e-02,
#         1.16339772e-01,
#         -7.86153567e-02,
#         -1.35754227e-01,
#         2.41563884e-01,
#         8.84834974e-03,
#         1.80948445e-01,
#         -9.90533262e-02,
#         2.76084110e-01,
#         3.50562614e-01,
#         -4.53529195e-01,
#         1.02285716e-01,
#         2.59474174e-01,
#         1.76931461e-01,
#         -3.90651510e-01,
#         2.49708831e-01,
#         1.48804567e-01,
#         2.36283073e-01,
#         -3.40993532e-01,
#         1.64963706e-01,
#         4.01265954e-01,
#         3.47122018e-01,
#         -3.36578116e-01,
#         7.71991377e-02,
#         -1.10710537e-03,
#         1.02337797e-01,
#         5.64733808e-02,
#         -2.47978755e-01,
#         2.11763838e-01,
#         -3.27245869e-01,
#         3.96460767e-01,
#         1.77708826e-01,
#         2.26206263e-01,
#         -1.53497425e-02,
#         1.57687108e-01,
#         -2.15590779e-01,
#         8.89947610e-02,
#         1.02317303e-01,
#         -1.30279807e-01,
#         9.21371876e-02,
#         9.99828772e-02,
#         1.34219553e-01,
#         9.78965513e-02,
#         9.04934332e-02,
#         -2.57343686e-01,
#         1.10804286e-01,
#         2.45952733e-02,
#         -3.07178913e-01,
#         -4.04244433e-01,
#         1.84128235e-01,
#         1.93291834e-01,
#         3.06781768e-01,
#         1.61201668e-01,
#         4.15834496e-01,
#         -1.69154606e-01,
#         -1.70212066e-01,
#         -1.94868545e-02,
#         -1.04560104e-01,
#         -6.48282362e-02,
#         -3.48026046e-02,
#         2.27830265e-01,
#         1.80251236e-01,
#         1.50526619e-01,
#         2.33140016e-01,
#         -5.40694277e-02,
#         1.59574230e-01,
#         2.66640118e-01,
#         -7.47564827e-02,
#         -1.65523144e-02,
#         -4.71774403e-01,
#         -2.48811897e-01,
#         2.99523886e-01,
#         -9.05309588e-02,
#         2.61711536e-01,
#         2.63624520e-01,
#         8.92583364e-02,
#         1.31955253e-01,
#         -9.37824918e-02,
#         -4.12023926e-02,
#         4.35810768e-01,
#         2.34311860e-01,
#         2.55466298e-01,
#         3.17721013e-04,
#         5.27174720e-02,
#         -2.35002919e-01,
#         -6.15358687e-02,
#         -3.17247058e-01,
#         3.01154350e-02,
#         7.04440764e-02,
#         -5.97849217e-03,
#         1.54753025e-01,
#         -1.52622614e-01,
#         2.68665238e-01,
#         -3.22230717e-01,
#         -2.50774174e-01,
#         -1.37582045e-01,
#         -2.34281077e-02,
#         4.77689822e-01,
#         7.90825995e-02,
#         3.41430942e-02,
#         -1.79909016e-01,
#         -2.63876980e-02,
#         2.68438136e-01,
#         -2.10268813e-01,
#         1.25205887e-01,
#         -1.05634661e-01,
#         1.42649368e-01,
#         1.75592964e-02,
#         2.07177808e-01,
#         2.23939222e-01,
#         2.69327001e-01,
#         4.79763091e-01,
#         4.92676182e-01,
#         -2.07413759e-01,
#         -1.21073175e-01,
#         1.16325244e-01,
#         -8.00367143e-02,
#         -6.48164085e-02,
#         2.16922612e-01,
#         -1.42651948e-01,
#         -6.40750059e-02,
#         2.88126337e-01,
#         -1.71494260e-02,
#         -1.60270585e-01,
#         2.06978846e-01,
#         1.64630564e-01,
#         6.83515189e-02,
#         -6.82396697e-02,
#         7.76214475e-02,
#         -3.37385059e-01,
#         -4.26136422e-02,
#         -1.69850014e-03,
#         1.43710683e-01,
#         2.63300361e-02,
#         3.70991855e-01,
#         4.46791852e-01,
#         3.26446132e-01,
#         2.95447821e-01,
#         2.16953407e-01,
#         1.71677502e-01,
#         -9.79072452e-02,
#         -1.35824209e-01,
#         -2.82132975e-02,
#         1.11545485e-01,
#         -8.76193795e-02,
#         1.02655483e-01,
#         2.08096169e-01,
#         1.21970753e-01,
#         -1.01571491e-02,
#         1.04032237e-01,
#         -4.65336579e-02,
#         -2.42762339e-01,
#         6.62249479e-02,
#         9.51611979e-02,
#         -4.00372200e-02,
#         1.97473995e-01,
#         -4.07425370e-01,
#     ]
# )
# print(f"particle -> flows:", pso.particle_to_flows(particle))
# print(pso.river_basin.log)
